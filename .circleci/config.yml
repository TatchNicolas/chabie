version: 2
jobs:
  test:
    docker: 
      - image: circleci/python:3.6.5
    steps:
      - checkout # check out the code in the project directory
      - run: 
          name: Basic setup
          command: |
            ls
            pip install pipenv
            pipenv install --dev
            pipenv run pip freeze
      - run: 
          name: Run pytest
          command: |
            pipenv run pytest
  build:
    docker: 
      - image: circleci/python:3.6.5
    steps:
      - checkout # check out the code in the project directory
      - run: 
          name: Basic setup
          command: |
            ls
            pip install pipenv
            pipenv install --dev
            pipenv run pip freeze
      - run:
          name: Create package
          command: |
            pipenv run python setup.py sdist bdist_wheel
  deploy:
    docker: 
      - image: circleci/python:3.6.5
    steps:
      - checkout # check out the code in the project directory
      - run:
          name: Verify git tag vs. version
          command: |
            echo $CIRCLE_TAG
            echo $CIRCLE_BRANCH
            pipenv run python setup.py verify
      - run:
          name: Set environment variables
          command: |
            if [ $CIRCLE_BRANCH = "stage" ]; then
              export TWINE_USERNAME=$PYPI_USERNAME_STG
              export TWINE_PASSWORD=$PYPI_PASSWORD_STG
              export TWINE_REPOSITORY_URL=https://test.pypi.org/legacy/
            elif [ $CIRCLE_BRANCH = "master" ]; then
              export TWINE_USERNAME=$PYPI_USERNAME_PRD
              export TWINE_PASSWORD=$PYPI_PASSWORD_PRD
            else
              echo 'Invalid branch name'
              exit 1
            fi
      - run:
          name: Upload to PyPI
          command: |
            pipenv run twine upload
workflows:
  version: 2
  test_and_build:
    jobs:
      - test:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - build:
          requires:
            - test
          filters:
            branches:
              only: /(stage|master)/
            tags:
              only: /.*/
      - deploy:
          requires:
            - test
            - deploy
          filters:
            branches:
              only: /(stage|master)/
            tags:
              only: /^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}$/ 
